<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Task Handler Application</display-name>

  <!-- Autoriser les requÃªtes avec CORS -->
  <!-- Pour pouvoir tester l'API depuis Swagger -->
  <filter>
    <filter-name>CorsFilter</filter-name>
    <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
    <init-param>
      <param-name>cors.allowed.origins</param-name>
      <param-value>https://editor.swagger.io</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.methods</param-name>
      <param-value>GET,POST,PUT,DELETE,OPTIONS</param-value>
    </init-param>
    <init-param>
      <param-name>cors.support.credentials</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.headers</param-name>
      <param-value>Authorization</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CorsFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>ContentNegociationFilter</filter-name>
    <filter-class>gateway.contentnegociation.filter.ContentNegociationFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>ContentNegociationFilter</filter-name>
    <url-pattern>/board</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContentNegociationFilter</filter-name>
    <url-pattern>/board/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContentNegociationFilter</filter-name>
    <url-pattern>/task</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContentNegociationFilter</filter-name>
    <url-pattern>/task/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContentNegociationFilter</filter-name>
    <url-pattern>/user</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ContentNegociationFilter</filter-name>
    <url-pattern>/user/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>DateBasedCacheFilter</filter-name>
    <filter-class>gateway.cache.filters.DateCacheFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>DateBasedCacheFilter</filter-name>
    <url-pattern>/board</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>DateBasedCacheFilter</filter-name>
    <url-pattern>/board/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>DateBasedCacheFilter</filter-name>
    <url-pattern>/task</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>DateBasedCacheFilter</filter-name>
    <url-pattern>/task/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>ETagCacheFilter</filter-name>
    <filter-class>gateway.cache.filters.ETagCacheFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>ETagCacheFilter</filter-name>
    <url-pattern>/user</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>ETagCacheFilter</filter-name>
    <url-pattern>/user/*</url-pattern>
  </filter-mapping>

  <listener>
    <listener-class>gateway.InitServletContext</listener-class>
  </listener>
  <listener>
    <listener-class>gateway.configuration.liquibase.LiquibaseConfiguration</listener-class>
  </listener>
  <listener>
    <listener-class>gateway.configuration.prometheus.PrometheusServletContext</listener-class>
  </listener>

  <servlet>
    <servlet-name>PrometheusServlet</servlet-name>
    <servlet-class>gateway.controller.PrometheusController</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>UserServlet</servlet-name>
    <servlet-class>user.application.controller.UserController</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>TaskServlet</servlet-name>
    <servlet-class>task.application.controller.TaskController</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>BoardServlet</servlet-name>
    <servlet-class>board.application.controller.BoardController</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>PrometheusServlet</servlet-name>
    <url-pattern>/metric</url-pattern>
  </servlet-mapping>

  <resource-ref>
    <description>DB Connection</description>
    <res-ref-name>jdbc/TaskHandlerDB</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
</web-app>